<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Benchmark>
  <Version>0.3.0</Version>
  <GeneralErrors/>
  <Entry>
    <Task class="org.jbenchx.run.BenchmarkTask">
      <ClassName>test.Task</ClassName>
      <MethodName>task1</MethodName>
      <Params>
        <TargetTimeNs>250000000</TargetTimeNs>
        <Divisor>1</Divisor>
        <MinRunCount>10</MinRunCount>
        <MaxRunCount>100</MaxRunCount>
        <MinSampleCount>8</MinSampleCount>
        <MaxDeviation>0.05</MaxDeviation>
      </Params>
      <SingleRun>false</SingleRun>
      <ConstructorArguments>
        <int>42</int>
        <string>foo</string>
      </ConstructorArguments>
      <MethodArguments/>
      <MethodArgumentTypes/>
    </Task>
    <Result class="org.jbenchx.result.TaskResult">
      <Timings>
        <Run>
          <Time>1111</Time>
        </Run>
        <Run>
          <Time>1222</Time>
        </Run>
        <MinTime>1111</MinTime>
      </Timings>
      <Errors/>
      <Warnings>
        <org.jbenchx.result.BenchmarkWarning>
          <Reason>some warning reason here</Reason>
        </org.jbenchx.result.BenchmarkWarning>
      </Warnings>
      <EstimatedBenchmark>0.0999909999099991</EstimatedBenchmark>
      <IterationCount>11111</IterationCount>
    </Result>
  </Entry>
  <Entry>
    <Task class="org.jbenchx.run.BenchmarkTask">
      <ClassName>test.Task</ClassName>
      <MethodName>task2</MethodName>
      <Params>
        <TargetTimeNs>250000000</TargetTimeNs>
        <Divisor>1</Divisor>
        <MinRunCount>10</MinRunCount>
        <MaxRunCount>100</MaxRunCount>
        <MinSampleCount>8</MinSampleCount>
        <MaxDeviation>0.05</MaxDeviation>
      </Params>
      <SingleRun>false</SingleRun>
      <ConstructorArguments/>
      <MethodArguments>
        <int>42</int>
        <string>foo</string>
      </MethodArguments>
      <MethodArgumentTypes>
        <java-class>int</java-class>
        <java-class>java.lang.String</java-class>
      </MethodArgumentTypes>
    </Task>
    <Result class="org.jbenchx.result.TaskResult">
      <Timings>
        <Run>
          <Time>1111</Time>
        </Run>
        <Run>
          <Time>1222</Time>
        </Run>
        <MinTime>1111</MinTime>
      </Timings>
      <Errors>
        <org.jbenchx.result.BenchmarkClassError>
          <stackTrace>
            <trace>org.jbenchx.test.monitor.XmlResultSerializerTest.createError(XmlResultSerializerTest.java:27)</trace>
            <trace>org.jbenchx.test.monitor.XmlResultSerializerTest.writeXmlResult_readXmlResult(XmlResultSerializerTest.java:55)</trace>
            <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
            <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
            <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
            <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
            <trace>org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)</trace>
            <trace>org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)</trace>
            <trace>org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)</trace>
            <trace>org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)</trace>
            <trace>org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)</trace>
            <trace>org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)</trace>
            <trace>org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)</trace>
            <trace>org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)</trace>
            <trace>org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)</trace>
            <trace>org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)</trace>
            <trace>org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)</trace>
            <trace>org.junit.runners.ParentRunner.run(ParentRunner.java:236)</trace>
            <trace>org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)</trace>
            <trace>org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)</trace>
            <trace>org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)</trace>
            <trace>org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)</trace>
            <trace>org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)</trace>
            <trace>org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)</trace>
          </stackTrace>
          <Class>org.jbenchx.test.monitor.XmlResultSerializerTest</Class>
          <Message>some failure warning here</Message>
        </org.jbenchx.result.BenchmarkClassError>
      </Errors>
      <Warnings/>
      <EstimatedBenchmark>0.04999549995499955</EstimatedBenchmark>
      <IterationCount>22222</IterationCount>
    </Result>
  </Entry>
  <SystemInfo>
    <TimerGranularity>1</TimerGranularity>
    <MethodInvokeTime>2</MethodInvokeTime>
    <SystemBenchmark>3.0</SystemBenchmark>
    <OsInfo>linux</OsInfo>
    <OsVersion>2.3.4</OsVersion>
    <CpuCount>2</CpuCount>
    <MaxHeapSize>10000000</MaxHeapSize>
  </SystemInfo>
  <StartTime>2011-10-02 14:13:28.888 UTC</StartTime>
  <EndTime>2011-10-02 14:13:29.999 UTC</EndTime>
</Benchmark>